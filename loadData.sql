
create table user_schema as (select * from daneliza.public_user_information)

create table friends_schema as (select * from daneliza.public_are_friends)

create table photo_schema as (select * from daneliza.public_photo_information)

create table tag_schema as (select * from daneliza.public_tag_information)

create table event_schema as (select * from daneliza.public_event_information)



--COPY TO LOCATION TABLE
INSERT INTO LOCATION (CITY, STATE, COUNTRY) 
SELECT DISTINCT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY FROM 
USER_SCHEMA
UNION 
SELECT DISTINCT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY FROM 
USER_SCHEMA
UNION 
SELECT DISTINCT EVENT_CITY, EVENT_STATE, EVENT_COUNTRY FROM 
EVENT_SCHEMA; 

--LOCATION TRIGGER
CREATE SEQUENCE loc_sequence 
START WITH 1 
INCREMENT BY 1; 
CREATE TRIGGER loc_trigger 
BEFORE INSERT ON LOCATION 
FOR EACH ROW 
BEGIN 
SELECT loc_sequence.nextval into :new.LOC_ID from dual; 
END
.
RUN;



--INSERT TO USER TABLE
INSERT INTO FB_USER(USER_ID, FIRST_NAME, LAST_NAME,YEAR_OF_BIRTH, MONTH_OF_BIRTH,
		DAY_OF_BIRTH, GENDER,HOMETOWN,CURRENT_LOCATION) 
SELECT (USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH,
		DAY_OF_BIRTH, GENDER,HOMETOWN,CURRENT_LOCATION)
FROM(


SELECT FB.USER_ID, FB.FIRST_NAME, FB.LAST_NAME, FB.YEAR_OF_BIRTH, FB.MONTH_OF_BIRTH,
		FB.DAY_OF_BIRTH, FB.GENDER, HM.LOC_ID, CUR.LOC_ID
	FROM USER_SCHEMA FB, LOCATION HM, LOCATION CUR
WHERE USER_SCHEMA.HOMETOWN_CITY = HM.CITY AND
      USER_SCHEMA.HOMETOWN_STATE = HM.STATE AND
      USER_SCHEMA.HOMETOWN_COUNTRY = HM.COUNTRY AND
      USER_SCHEMA.CURRENT_CITY = CUR.CITY AND
      USER_SCHEMA.CURRENT_STATE = CUR.STATE AND
      USER_SCHEMA.CURRENT_COUNTRY = CUR.COUNTRY);


INSERT INTO EDU_PROGRAM (INSTITUTION_NAME, PROGRAM_YEAR, ROGRAM_CONCENTRATION, PROGRAM_DEGREE) 
SELECT DISTINCT INSTITUTION_NAME, PROGRAM_YEAR, ROGRAM_CONCENTRATION, PROGRAM_DEGREE 
FROM user_schema;

CREATE SEQUENCE edu_sequence 
START WITH 1 
INCREMENT BY 1;  
CREATE TRIGGER edu_trigger 
BEFORE INSERT ON LOCATION 
FOR EACH ROW 
BEGIN 
SELECT edu_sequence.nextval into :new.PROGRAM_ID from dual; 
END;

INSERT INTO USER_EDUCATION (USER_ID, PROGRAM_ID)
SELECT user_schema.USER_ID, EDU_PROGRAM.PROGRAM_ID
FROM
(SELECT user_schema.USER_ID, user_schema.INSTITUTION_NAME, user_schema.PROGRAM_YEAR, user_schema.PROGRAM_CONCENTRATION, user_schema.PROGRAM_DEGREE,
	EDU_PROGRAM.*
FROM user_schema, EDU_PROGRAM
WHERE user_schema.INSTITUTION_NAME = EDU_PROGRAM.INSTITUTION_NAME
AND user_schema.PROGRAM_YEAR = EDU_PROGRAM.PROGRAM_YEAR
AND user_schema.PROGRAM_CONCENTRATION = EDU_PROGRAM.PROGRAM_CONCENTRATION
AND user_schema.PROGRAM_DEGREE = EDU_PROGRAM.PROGRAM_DEGREE);
