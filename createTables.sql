CREATE TABLE FB_USER (
USER_ID INTEGER,
FIRST_NAME CHAR(20) NOT NULL,
LAST_NAME CHAR(20) NOT NULL,
YEAR_OF_BIRTH INTEGER,
MONTH_OF_BIRTH INTEGER,
DAY_OF_BIRTH INTEGER,
GENDER CHAR(6),
HOMETOWN INTEGER,
CURRENT_LOCATION INTEGER,
PRIMARY KEY (USER_ID),
FOREIGN KEY (HOMETOWN) REFERENCES LOCATION,
FOREIGN KEY (CURRENT_LOCATION) REFERENCES LOCATION
);

CREATE TABLE LOCATION (
LOC_ID INTEGER,
CITY CHAR(20),
STATE CHAR(20),
COUNTRY CHAR(40),
PRIMARY KEY (LOC_ID),
UNIQUE (CITY, STATE, COUNTRY)
);

CREATE TABLE EDU_PROGRAM (
PROGRAM_ID INTEGER,
INSTITUTION_NAME CHAR(50),
PROGRAM_YEAR INTEGER,
PROGRAM_CONCENTRATION CHAR(40),
PROGRAM_DEGREE CHAR(20),
PRIMARY KEY (PROGRAM_ID),
UNIQUE (INSTITUTION_NAME, PROGRAM_YEAR, PROGRAM_CONCENTRATION, PROGRAM_DEGREE)
);

CREATE TABLE USER_EDUCATION (
USER_ID INTEGER NOT NULL,
PROGRAM_ID INTEGER NOT NULL,
FOREIGN KEY (USER_ID) REFERENCES FB_USER ON DELETE CASCADE,
FOREIGN KEY (PROGRAM_ID) REFERENCES EDU_PROGRAM
);

CREATE TABLE FRIENDSHIP (
USER1_ID INTEGER NOT NULL,
USER2_ID INTEGER NOT NULL,
FOREIGN KEY (USER1_ID) REFERENCES FB_USER ON DELETE CASCADE,
FOREIGN KEY (USER2_ID) REFERENCES FB_USER ON DELETE CASCADE,
UNIQUE (USER1_ID, USER2_ID)
);

CREATE TABLE PHOTO (
PHOTO_ID INTEGER,
PHOTO_CAPTION CHAR(1000),
PHOTO_CREATED_TIME DATE NOT NULL,
PHOTO_MODIFIED_TIME DATE,
PHOTO_LINK URITYPE NOT NULL,
PRIMARY KEY (PHOTO_ID)
);

CREATE TABLE ALBUM (
ALBUM_ID INTEGER,
OWNER_ID INTEGER NOT NULL,
COVER_PHOTO_ID INTEGER NOT NULL,
ALBUM_NAME CHAR(100),
ALBUM_CREATED_TIME DATE NOT NULL,
ALBUM_MODIFIED_TIME DATE,
ALBUM_LINK URITYPE NOT NULL,
ALBUM_VISIBILITY CHAR(20) NOT NULL,
PRIMARY KEY (ALBUM_ID),
FOREIGN KEY (OWNER_ID) REFERENCES FB_USER,
FOREIGN KEY (COVER_PHOTO_ID) REFERENCES PHOTO,
UNIQUE (ALBUM_LINK)
);

CREATE TABLE ALBUM_PHOTOS (
ALBUM_ID INTEGER NOT NULL,
PHOTO_ID INTEGER NOT NULL,
FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM ON DELETE CASCADE,
FOREIGN KEY (PHOTO_ID) REFERENCES PHOTO ON DELETE CASCADE,
UNIQUE (ALBUM_ID, PHOTO_ID)
);

CREATE TABLE TAG (
PHOTO_ID INTEGER NOT NULL,
TAG_SUBJECT_ID INTEGER NOT NULL,
TAG_CREATED_TIME DATE NOT NULL,
TAG_X_COORDINATE REAL NOT NULL,
TAG_Y_COORDINATE REAL NOT NULL,
FOREIGN KEY (PHOTO_ID) REFERENCES PHOTO ON DELETE CASCADE,
FOREIGN KEY (TAG_SUBJECT_ID) REFERENCES FB_USER,
UNIQUE (PHOTO_ID, TAG_SUBJECT_ID)
);

CREATE TABLE COMMENT (
PHOTO_ID INTEGER NOT NULL,
USER_ID INTEGER NOT NULL,
CONTENT CHAR(1000) NOT NULL,
TIME DATE NOT NULL,
FOREIGN KEY (PHOTO_ID) REFERENCES PHOTO ON DELETE CASCADE,
FOREIGN KEY (USER_ID) REFERENCES FB_USER,
UNIQUE (PHOTO_ID, USER_ID, TIME)
);

CREATE TABLE EVENT (
EVENT_ID INTEGER,
EVENT_CREATOR_ID INTEGER NOT NULL,
EVENT_NAME CHAR(100),
EVENT_TAGLINE CHAR(500),
EVENT_DESCRIPTION CHAR(1000),
EVENT_HOST CHAR(50),
EVENT_TYPE CHAR(20),
EVENT_SUBTYPE CHAR(20),
EVENT_LOCATION CHAR(50),
LOC_ID INTEGER,
EVENT_START_TIME DATE,
EVENT_END_TIME DATE,
PRIMARY KEY (EVENT_ID),
FOREIGN KEY (EVENT_CREATOR_ID) REFERENCES USER,
FOREIGN KEY (LOC_ID) REFERENCES LOCATION,
);